# EditorConfig is awesome:http://EditorConfig.org

# top-most EditorConfig file
root = true

# Don't use tabs for indentation.
[*]
indent_style = space
# (Please don't specify an indent_size here; that has too many unintended consequences.)

# Code files
[*.cs]
indent_size = 4
insert_final_newline = true
charset = utf-8-bom

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# Dotnet code style settings:
[*.cs]
# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = false:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = false:suggestion
dotnet_style_null_propagation = false:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# CSharp code style settings:
[*.cs]
# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:error
csharp_style_expression_bodied_constructors = false:error
csharp_style_expression_bodied_operators = false:error

csharp_style_expression_bodied_properties = false:error
csharp_style_expression_bodied_indexers = false:error
csharp_style_expression_bodied_accessors = false:error

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = false:suggestion
csharp_style_pattern_matching_over_as_with_null_check = false:suggestion

csharp_style_inlined_variable_declaration = false:suggestion
csharp_style_throw_expression = false:suggestion
csharp_style_conditional_delegate_call = false:suggestion

csharp_prefer_braces = true:suggestion

# Newline settings
csharp_new_line_before_open_brace = anonymous_methods,anonymous_types,events,indexers,lambdas,local_functions,methods,object_collection,properties,types
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true

csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_parentheses = false

csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = no_change

csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

[*.cs]
# enum
dotnet_naming_rule.enum_rule.symbols  = enum_symbol
dotnet_naming_rule.enum_rule.style    = enum_style
dotnet_naming_rule.enum_rule.severity = suggestion

dotnet_naming_symbols.enum_symbol.applicable_kinds           = enum
dotnet_naming_symbols.enum_symbol.applicable_accessibilities = *

dotnet_naming_style.enum_style.required_prefix = E
dotnet_naming_style.enum_style.capitalization  = pascal_case

# interface
dotnet_naming_rule.interface_rule.symbols  = interface_symbol
dotnet_naming_rule.interface_rule.style    = interface_style
dotnet_naming_rule.interface_rule.severity = suggestion

dotnet_naming_symbols.interface_symbol.applicable_kinds           = interface
dotnet_naming_symbols.interface_symbol.applicable_accessibilities = *

dotnet_naming_style.interface_style.required_prefix = I
dotnet_naming_style.interface_style.capitalization  = pascal_case

# class/struct
dotnet_naming_rule.class_rule.symbols  = class_symbol
dotnet_naming_rule.class_rule.style    = class_style
dotnet_naming_rule.class_rule.severity = suggestion

dotnet_naming_symbols.class_symbol.applicable_kinds           = class,struct
dotnet_naming_symbols.class_symbol.applicable_accessibilities = *

dotnet_naming_style.class_style.capitalization  = pascal_case

# static readonly field
dotnet_naming_rule.static_readonly_field_rule.symbols  = static_readonly_field_symbol
dotnet_naming_rule.static_readonly_field_rule.style    = static_readonly_field_style
dotnet_naming_rule.static_readonly_field_rule.severity = suggestion

dotnet_naming_symbols.static_readonly_field_symbol.applicable_kinds           = field
dotnet_naming_symbols.static_readonly_field_symbol.applicable_accessibilities = *
dotnet_naming_symbols.static_readonly_field_symbol.required_modifiers         = static, readonly

dotnet_naming_style.static_readonly_field_style.word_separator  = _
dotnet_naming_style.static_readonly_field_style.capitalization  = all_upper

# static field
dotnet_naming_rule.static_field_rule.symbols  = static_field_symbol
dotnet_naming_rule.static_field_rule.style    = static_field_style
dotnet_naming_rule.static_field_rule.severity = suggestion

dotnet_naming_symbols.static_field_symbol.applicable_kinds           = field
dotnet_naming_symbols.static_field_symbol.applicable_accessibilities = private,protected
dotnet_naming_symbols.static_field_symbol.required_modifiers         = static

dotnet_naming_style.static_field_style.required_prefix = ms_
dotnet_naming_style.static_field_style.capitalization  = pascal_case

# field
dotnet_naming_rule.field_rule.symbols  = field_symbol
dotnet_naming_rule.field_rule.style    = field_style
dotnet_naming_rule.field_rule.severity = suggestion

dotnet_naming_symbols.field_symbol.applicable_kinds           = field
dotnet_naming_symbols.field_symbol.applicable_accessibilities = private,protected

dotnet_naming_style.field_style.required_prefix = m_
dotnet_naming_style.field_style.capitalization  = pascal_case

# property
dotnet_naming_rule.property_rule.symbols  = property_symbol
dotnet_naming_rule.property_rule.style    = property_style
dotnet_naming_rule.property_rule.severity = suggestion

dotnet_naming_symbols.property_symbol.applicable_kinds           = property
dotnet_naming_symbols.property_symbol.applicable_accessibilities = *

dotnet_naming_style.property_style.capitalization  = pascal_case

# parameter
dotnet_naming_rule.parameter_rule.symbols  = parameter_symbol
dotnet_naming_rule.parameter_rule.style    = parameter_style
dotnet_naming_rule.parameter_rule.severity = suggestion

dotnet_naming_symbols.parameter_symbol.applicable_kinds           = parameter
dotnet_naming_symbols.parameter_symbol.applicable_accessibilities = *

dotnet_naming_style.parameter_style.word_separator  = _
dotnet_naming_style.parameter_style.capitalization  = all_lower